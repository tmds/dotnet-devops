trigger:
- main

variables:
- name: BuildContext        # Source directory for the image build
  value: 'web'
- name: Dockerfile          # Source location of Dockerfile
  value: 'web/Dockerfile'
- name: HelmChart           # Source location of Helm chart
  value: 'helm/dotnet-chart'
- name: HelmReleaseName     # Helm release name
  value: 'web'
- name: RegistryService     # Image registry service connection name
  value: 'DefaultDockerRegistryService'
- name: RegistryServer      # Hostname of the registry
  value: 'quay.io'
- name: ImageName           # Name of the image
  value: 'tdeseyn/web'
- name: ImageTag            # Image tag
  value: $(Build.SourceVersion)
- name: TargetEnvironment   # Azure DevOps target environment resource
  value: 'StagingEnvironment.tdeseyn-stage'
- name: Namespace           # Kubernetes target namespace
  value: 'tdeseyn-stage'
- name: ImagePullSecret     # Kubernetes secret for pulling image
  value: 'pullsecret'

jobs:
- job: Build
  steps:
  - task: Docker@2
    displayName: Build and Push Image
    inputs:
      command: buildAndPush
      containerRegistry: $(RegistryService)
      buildContext: $(BuildContext)
      Dockerfile: $(Build.SourcesDirectory)/$(Dockerfile)
      repository: $(ImageName)
      tags: $(ImageTag)
- deployment: Deploy
  dependsOn: Build
  environment: $(TargetEnvironment)
  strategy:
    runOnce:
      deploy:
        steps:
        - checkout: self
        - task: KubernetesManifest@0
          name: bake
          displayName: Bake Manifests
          inputs:
            action: bake
            helmChart: $(HelmChart)
            releaseName: $(HelmReleaseName)
            overrides: |
              build.enabled:false
              image.name:$(RegistryServer)/$(ImageName)
            containers: |
              $(RegistryServer)/$(ImageName):$(ImageTag)
        - task: KubernetesManifest@0
          displayName: Deploy Manifests
          inputs:
            action: deploy
            manifests: $(bake.manifestsBundle)
            namespace: $(Namespace)
            imagePullSecrets: $(ImagePullSecret)