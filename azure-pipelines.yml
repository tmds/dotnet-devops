trigger:
- main

variables:
- name: BuildContext        # Source directory that contains 'Web' application
  value: 'web'
- name: Dockerfile          # Source location of Dockerfile that builds 'Web' application 
  value: 'web/Dockerfile'
- name: RegistryService     # Azure DevOps Docker service connection name
  value: 'DefaultDockerRegistryService'
- name: Environment         # Azure DevOps target environment
  value: 'StagingEnvironment'
- name: EnvironmentResource # Azure DevOps target resource
  value: 'tdeseyn-stage'
- name: Image               # Name of the image
  value: 'tdeseyn/web'
- name: ImageTag            # Image tag
  value: '$(Build.BuildId)'
- name: Namespace           # Kubernetes namespace
  value: 'tdeseyn-stage'
- name: ImagePullSecret     # Kubernetes secret for pulling from RegistryService
  value: 'pullsecret'
- name: ReleaseName         # Kubernetes secret for pulling from RegistryService
  value: 'web'

jobs:
- job: Build
  steps:
  - task: Docker@2
    displayName: Build Image
    inputs:
      command: build
      containerRegistry: $(RegistryService)
      buildContext: '$(BuildContext)'
      Dockerfile: '$(Build.SourcesDirectory)/$(Dockerfile)'
      repository: '$(Image)'
      tags: $(ImageTag)
  - task: Docker@2
    displayName: Login
    inputs:
      command: login
      containerRegistry: $(RegistryService)
  - task: Docker@2
    displayName: Push Image
    inputs:
      command: push
      containerRegistry: $(RegistryService)
      repository: '$(Image)'
      tags: $(ImageTag)
- deployment: Deploy
  environment: $(Environment).$(EnvironmentResource)
    # name: 
    # resourceName: '$(EnvironmentResource)'
    # resourceType: Kubernetes
  strategy:
    runOnce:
      deploy:
        steps:
        - checkout: self
        - task: KubernetesManifest@0
          name: bake
          displayName: Render Helm Chart
          inputs:
            action: 'bake'
            namespace: $(Namespace)
            helmChart: 'helm/dotnet-chart'
            releaseName: $(ReleaseName)
            overrides: |
              build.enabled:false
              image.name:quay.io/tdeseyn/web
              image.tag:$(ImageTag)
        - task: KubernetesManifest@0
          displayName: Deploy K8s Manifests
          inputs:
            manifests: $(bake.manifestsBundle)
            namespace: $(Namespace)
            imagePullSecrets: $(ImagePullSecret)
            releaseName: $(ReleaseName)